{"version":3,"sources":["context/AuthContext.js","components/Payments.js","components/Header.js","components/Landing.js","components/App.js","index.js"],"names":["AuthContext","createContext","AuthContextProvider","props","useState","isAuth","setIsAuth","credits","setCredits","fetchUser","a","axios","get","result","data","console","log","Provider","value","children","Payments","useContext","handleToken","stripeToken","post","name","description","amount","token","stripeKey","process","className","listStyle","margin","Header","useEffect","to","href","style","renderHeaderContent","landingText","textAlign","Landing","Dashboard","App","exact","path","component","ReactDOM","render","document","querySelector"],"mappings":"gPAGaA,EAAcC,0BA8BZC,EA5Ba,SAACC,GAAW,IAAD,EACTC,mBAAS,MADA,mBAC9BC,EAD8B,KACtBC,EADsB,OAEPF,mBAAS,GAFF,mBAE9BG,EAF8B,KAErBC,EAFqB,KAI/BC,EAAS,uCAAG,4BAAAC,EAAA,sEACKC,IAAMC,IAAI,qBADf,OAEI,QADdC,EADU,QAELC,KACTR,EAAU,MACe,KAAhBO,EAAOC,MAChBR,GAAU,GACVS,QAAQC,IAAI,uBACa,KAAhBH,EAAOC,OAChBR,GAAU,GACVS,QAAQC,IAAI,sBAEdR,EAAWK,EAAOC,KAAKP,SAXP,2CAAH,qDAiBf,OACE,cAACP,EAAYiB,SAAb,CAAsBC,MAAO,CAAEb,SAAQI,YAAWF,WAAlD,SACGJ,EAAMgB,Y,iBCSEC,EAhCE,WAAO,IAAD,EACSC,qBAAWrB,GAAzBS,GADK,EACbJ,OADa,EACLI,WACVa,EAAW,uCAAG,WAAOC,GAAP,eAAAb,EAAA,sEACGC,IAAMa,KAAK,cAAeD,GAD7B,OACZV,EADY,OAElBE,QAAQC,IAAIH,GACZJ,IAHkB,2CAAH,sDAKjB,OACE,cAAC,IAAD,CACEgB,KAAK,OACLC,YAAY,mBACZC,OAAQ,IACRC,MAAO,SAACA,GAAD,OAAWN,EAAYM,IAa9BC,UAAWC,8GAjBb,SAmBE,wBAAQC,UAAU,MAAlB,4BC0BAC,EAAY,CAAEC,OAAQ,UAEbC,EAvDA,WAAO,IAAD,EACoBb,qBAAWrB,GAA1CK,EADW,EACXA,OAAQI,EADG,EACHA,UAAWF,EADR,EACQA,QAC3B4B,qBAAU,WACR1B,MACC,IA2BH,OACE,8BACE,8BACE,sBAAKsB,UAAU,cAAf,UACG1B,EACC,cAAC,IAAD,CAAM+B,GAAG,WAAWL,UAAU,kBAA9B,kBAIA,cAAC,IAAD,CAAMK,GAAG,IAAIL,UAAU,kBAAvB,kBAKF,qBAAKA,UAAU,UACf,oBAAIA,UAAU,QAAd,SAxCoB,WAC1B,OAAQ1B,GACN,KAAK,KACH,OACF,KAAK,EACH,OACE,6BACE,mBAAGgC,KAAK,eAAR,8BAGN,QACE,MAAO,CACL,6BACE,cAAC,EAAD,KADM,KAGR,qBAAYC,MAAON,EAAnB,qBACWzB,IADH,KAGR,6BACE,mBAAG8B,KAAK,cAAR,qBADM,OAsBeE,aCvC3BC,EAAc,CAClBC,UAAW,UAGEC,EAdC,WACd,OACE,sBAAKJ,MAAOE,EAAZ,UACE,gDACA,0ECDAG,EAAY,kBAAM,0CAgBTC,MAdf,WACE,OACE,qBAAKb,UAAU,YAAf,SACE,cAAC,IAAD,UACE,gCACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,IAAIC,UAAWL,IACjC,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,WAAWC,UAAWJ,YCRlDK,IAASC,OACP,cAAC,EAAD,UACE,cAAC,EAAD,MAEFC,SAASC,cAAc,UAGzBpC,QAAQC,IAAI,iBAAkBc,+GAC9Bf,QAAQC,IAAI,qBAAsBc,gB","file":"static/js/main.0bc7c818.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nconst AuthContextProvider = (props) => {\r\n  const [isAuth, setIsAuth] = useState(null);\r\n  const [credits, setCredits] = useState(0);\r\n\r\n  const fetchUser = async () => {\r\n    const result = await axios.get(\"/api/current-user\");\r\n    if (result.data === null) {\r\n      setIsAuth(null);\r\n    } else if (result.data === \"\") {\r\n      setIsAuth(false);\r\n      console.log(\"User is logged out\");\r\n    } else if (result.data !== \"\") {\r\n      setIsAuth(true);\r\n      console.log(\"User is logged in\");\r\n    }\r\n    setCredits(result.data.credits); //setting credits info from updated user\r\n    // user is updated by getting that credit value from Stripe called\r\n    // in Payments.js\r\n    // Credits is part of User model defined in Mongoose\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuth, fetchUser, credits }}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContextProvider;\r\n","import React, { useContext } from \"react\";\r\nimport StripeCheckout from \"react-stripe-checkout\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport axios from \"axios\";\r\n\r\nconst Payments = () => {\r\n  const { isAuth, fetchUser } = useContext(AuthContext);\r\n  const handleToken = async (stripeToken) => {\r\n    const result = await axios.post(\"/api/stripe\", stripeToken);\r\n    console.log(result);\r\n    fetchUser(); //fetchingUser again to pull out new value of credits\r\n  };\r\n  return (\r\n    <StripeCheckout\r\n      name=\"Echo\"\r\n      description=\"5 credits for $5\"\r\n      amount={500} //500 cents is 5$\r\n      token={(token) => handleToken(token)} //NOT API KEY -> token receives callback func\r\n      //   callback is executed when we receive it from Stripe. It has\r\n      //   data about payment, like Object of all infos {\r\n      //         card: {id: \"card_1IP4VlI6r4UAGMypYSbTCIWt\", object: \"card\", address_city: null, address_country: null, address_line1: null, â€¦}\r\n      // client_ip: \"192.38.130.125\"\r\n      // created: 1614338973\r\n      // email: \"hithere@gmail.com\"\r\n      // id: \"tok_1IP4VlI6r4UAGMyp8eKrjX8y\"\r\n      // livemode: false\r\n      // object: \"token\"\r\n      // type: \"card\"\r\n      // used: false\r\n      // }\r\n      stripeKey={process.env.REACT_APP_STRIPE_PUB_KEY}\r\n    >\r\n      <button className=\"btn\">Add Credits</button>\r\n    </StripeCheckout>\r\n  );\r\n};\r\n\r\nexport default Payments;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Payments from \"./Payments\";\r\n\r\nconst Header = () => {\r\n  const { isAuth, fetchUser, credits } = useContext(AuthContext);\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, []);\r\n\r\n  const renderHeaderContent = () => {\r\n    switch (isAuth) {\r\n      case null:\r\n        return;\r\n      case false:\r\n        return (\r\n          <li>\r\n            <a href=\"/auth/google\">Login w/Google</a>\r\n          </li>\r\n        );\r\n      default:\r\n        return [\r\n          <li key=\"1\">\r\n            <Payments />\r\n          </li>,\r\n          <li key=\"2\" style={listStyle}>\r\n            Credits:{credits}\r\n          </li>,\r\n          <li key=\"3\">\r\n            <a href=\"/api/logout\">Logout</a>\r\n          </li>,\r\n        ];\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <div className=\"nav-wrapper\">\r\n          {isAuth ? (\r\n            <Link to=\"/surveys\" className=\"left brand-logo\">\r\n              Echo\r\n            </Link>\r\n          ) : (\r\n            <Link to=\"/\" className=\"left brand-logo\">\r\n              Echo\r\n            </Link>\r\n          )}\r\n\r\n          <div className=\"right\"></div>\r\n          <ul className=\"right\">{renderHeaderContent()}</ul>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst listStyle = { margin: \"0 10px\" };\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div style={landingText}>\r\n      <h1>Echo messenger</h1>\r\n      <h5>Collect feedback from your customers</h5>\r\n    </div>\r\n  );\r\n};\r\n\r\n// styling of div\r\nconst landingText = {\r\n  textAlign: \"center\",\r\n};\r\n\r\nexport default Landing;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Header from \"./Header\";\r\nimport Landing from \"./Landing\";\r\n\r\nconst Dashboard = () => <h1>Surveys</h1>;\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container\">\r\n      <Router>\r\n        <div>\r\n          <Header />\r\n          <Route exact path=\"/\" component={Landing} />\r\n          <Route exact path=\"/surveys\" component={Dashboard} />\r\n        </div>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\nimport AuthContextProvider from \"./context/AuthContext\";\n\nReactDOM.render(\n  <AuthContextProvider>\n    <App />\n  </AuthContextProvider>,\n  document.querySelector(\"#root\")\n);\n\nconsole.log(\"Stripe key is:\", process.env.REACT_APP_STRIPE_PUB_KEY);\nconsole.log(\"Enviroment key is:\", process.env.NODE_ENV);\n"],"sourceRoot":""}